import ply.yacc as yacc
from lexer import Lexer 

#took help from https://www.dabeaz.com/ply/ply.html#ply_nn24
class Parser:
        
    def __init__(self):
        self.parser=yacc.yacc(module=self)
    
    def parse_text(self,text):
       return self.parser.parse(text)



    #Statements




    #Expressions
    def p_expr_binop(self,p):
        '''expr : expr PLUS expr
             | expr MINUS expr
             | expr MULT expr
             | expr DIV expr
             | expr LESS expr
             | expr GREATER expr
             | expr AND expr 
             | expr OR expr  
             '''

        p[0]=('binop',p[1],p[2],p[3])
        '''
              expr AND_LOGICAL expr
             | expr OR_LOGICAL expr '''

    
    def p_expr_num(self,p):
        'expr : NUM'
        p[0]=('NUM', p[1])

    
    def p_expr_iden(self,p):
        'expr : ID'
        p[0]=('ID',p[1])
        
    
    
    def p_string(self,p):
        'string : STRING'
        p[0]=('STRING',p[1])
    
    tokens=Lexer.tokens
#parser=Parser()
#print(parser.parse_text('x=2+2'))
'''
while True:
    try:
        s=input('GO++>>')
    except EOFError:
        break
    if not s:continue
    result=parser.parse(s)
    print(result)'''
