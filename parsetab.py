
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIV EQUALS MINUS MULT NAME NUMBER PLUSassign : NAME EQUALS exprexpr : expr PLUS factor\n                | factor PLUS factorfactor : NUMBER'
    
_lr_action_items = {'NAME':([0,],[2,]),'$end':([1,4,6,9,10,],[0,-1,-4,-2,-3,]),'EQUALS':([2,],[3,]),'NUMBER':([3,7,8,],[6,6,6,]),'PLUS':([4,5,6,9,10,],[7,8,-4,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign':([0,],[1,]),'expr':([3,],[4,]),'factor':([3,7,8,],[5,9,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> assign","S'",1,None,None,None),
  ('assign -> NAME EQUALS expr','assign',3,'p_assign','parser.py',7),
  ('expr -> expr PLUS factor','expr',3,'p_expr_plus','parser.py',11),
  ('expr -> factor PLUS factor','expr',3,'p_expr_plus','parser.py',12),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',16),
]
